@tailwind base;
@tailwind components;
@tailwind utilities;

$color-home: 30 100% 70%;
$color-about: 60 100% 70%;
$color-projects: 160 100% 50%;
$color-blog: 190 100% 70%;
$color-contact: 290 100% 70%;
$colors-list: (color-home), (color-about), (color-projects), (color-blog),
  (color-contact);

@function calculateHsl($hsl, $lightness) {
  $result: ();
  @for $i from 1 through 2 {
    $result: append($result, nth($hsl, $i));
  }
  @return append($result, $lightness);
}

:root {
  --color-home: #{$color-home};
  --color-about: #{$color-about};
  --color-projects: #{$color-projects};
  --color-blog: #{$color-blog};
  --color-contact: #{$color-contact};
  color-scheme: dark;
}

.theme-home {
  --color-primary: #{$color-home};
  --color-primaryLight: #{calculateHsl($color-home, 40%)};
  --color-primaryDark: #{calculateHsl($color-home, 20%)};
  --color-primaryBackgroundDark: #{calculateHsl($color-home, 10%)};
  --color-secondary: 40 100% 50%;
  --color-secondaryDark: 40 100% 20%;
}

.theme-about {
  --color-primary: #{$color-about};
  --color-primaryLight: #{calculateHsl($color-about, 40%)};
  --color-primaryDark: #{calculateHsl($color-about, 20%)};
  --color-primaryBackgroundDark: #{calculateHsl($color-about, 10%)};
  --color-secondary: 40 100% 50%;
  --color-secondaryDark: 40 100% 20%;
}

.theme-projects {
  --color-primary: #{$color-projects};
  --color-primaryLight: #{calculateHsl($color-projects, 40%)};
  --color-primaryDark: #{calculateHsl($color-projects, 20%)};
  --color-primaryBackgroundDark: #{calculateHsl($color-projects, 10%)};
  --color-secondary: 190 100% 50%;
  --color-secondaryDark: 190 100% 20%;
}

.theme-blog {
  --color-primary: #{$color-blog};
  --color-primaryLight: #{calculateHsl($color-blog, 40%)};
  --color-primaryDark: #{calculateHsl($color-blog, 20%)};
  --color-primaryBackgroundDark: #{calculateHsl($color-blog, 10%)};
  --color-secondary: 210 100% 50%;
  --color-secondaryDark: 210 100% 20%;
}

.theme-contact {
  --color-primary: #{$color-contact};
  --color-primaryLight: #{calculateHsl($color-contact, 40%)};
  --color-primaryDark: #{calculateHsl($color-contact, 20%)};
  --color-primaryBackgroundDark: #{calculateHsl($color-contact, 10%)};
  --color-secondary: 320 100% 50%;
  --color-secondaryDark: 320 100% 20%;
}

html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  min-height: 100%;
  width: 100%;
}

html {
  width: 100vw;
  overflow-x: hidden;
  scroll-behavior: smooth;
  scroll-padding-top: 80px;
}

body {
  background: rgb(18, 24, 27);
}

.home-bg {
  background: radial-gradient(
    100% 95% at 100% 5%,
    hsl(var(--color-secondaryDark)) 0%,
    hsl(var(--color-primaryBackgroundDark)) 50%,
    rgba(0, 0, 0, 0) 100%
  );
}

.about-bg {
  background: radial-gradient(
    100% 95% at 100% 5%,
    hsl(var(--color-secondaryDark)) 0%,
    hsl(var(--color-primaryBackgroundDark)) 50%,
    rgba(0, 0, 0, 0) 100%
  );
}

.projects-bg {
  background: radial-gradient(
    100% 95% at 100% 5%,
    hsl(var(--color-secondaryDark)) 0%,
    hsl(var(--color-primaryBackgroundDark)) 50%,
    rgba(0, 0, 0, 0) 100%
  );
}

.blog-bg {
  background: radial-gradient(
    100% 95% at 100% 5%,
    hsl(var(--color-secondaryDark)) 0%,
    hsl(var(--color-primaryBackgroundDark)) 50%,
    rgba(0, 0, 0, 0) 100%
  );
}

.contact-bg {
  background: radial-gradient(
    100% 95% at 100% 5%,
    hsl(var(--color-secondaryDark)) 0%,
    hsl(var(--color-primaryBackgroundDark)) 50%,
    rgba(0, 0, 0, 0) 100%
  );
}

.tap-highlight {
  -webkit-tap-highlight-color: transparent;
}

.animateChild {
  transition: background 1s ease-out;
}

.focus-state {
  @apply focus:outline-none focus-visible:border-primary focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-opacity-75 focus-visible:ring-offset-1 focus-visible:ring-offset-primary;
}

@layer components {
  .btn-primary {
    &::before {
      display: block;
      position: absolute;
      top: -0.5rem;
      left: -1rem;
      border-radius: 0.75rem;
      width: 100%;
      height: 100%;
      padding: 1.5rem 4.5rem;
    }
    display: inline-block;
    @apply relative;
  }
  .btn-text {
    @apply;
  }

  .hoverOnParent:hover .animateChild,
  .hoverOnParent:focus .animateChild {
    background-position: 200%;
  }
}

// MDX
.prose {
  max-width: 50rem;
}

.prose code:not(:where([data-code-type='code-block'])) {
  @apply rounded-md px-1 py-1 text-white;
  background-color: hsl(var(--color-primaryDark));
}

.prose a {
  text-decoration: none;
}

.prose > ol > li > :last-child,
.prose > ul > li > :last-child {
  margin-bottom: 0;
}
.prose > ol > li > :first-child,
.prose > ul > li > :first-child {
  margin-top: 0;
}

.prose blockquote p:first-of-type::before,
.prose blockquote p:last-of-type::after {
  content: '';
}

.prose blockquote {
  border-style: solid;
  border-width: 0 0 0 0.25rem;
  border-image: linear-gradient(
      to top,
      hsl(var(--color-primary)),
      hsl(var(--color-primaryLight))
    )
    1;
}

.prose hr {
  border-style: solid;
  border-width: 0 0 1px 0;
  border-image: linear-gradient(
      to right,
      hsl(var(--color-primary)),
      hsl(var(--color-primaryLight))
    )
    1;
}

.mdx.prose :where(h1, h2, h3, h4) {
  scroll-margin-top: 100px;
  position: relative;
  display: block;
  margin-right: 0.5rem;
  width: -moz-fit-content;
  width: fit-content;
}

.mdx.prose :where(h1, h2, h3, h4) > a {
  border-bottom: none;
}

.mdx.prose.projects blockquote {
  font-style: normal;
}
.mdx.prose.projects blockquote:first-of-type h2 {
  margin-top: 1rem;
}
.mdx.prose.projects blockquote.with-icons h2 {
  margin-bottom: 0;
}

.mdx.prose .yt-lite {
  @apply overflow-hidden rounded;
}

.hash-anchor {
  @apply inset-y-0 w-full;
  position: absolute;
  background-image: none;
  background-size: 0;
}

.hash-anchor:hover {
  background-repeat: no-repeat;
  background-image: linear-gradient(
    to right,
    hsl(var(--color-primary)),
    hsl(var(--color-primaryLight))
  );
  background-size: 100% 2px;
  background-position: bottom;
}

.hash-anchor:hover:after,
.hash-anchor:focus:after {
  visibility: visible;
}

.hash-anchor:after {
  @apply invisible absolute -right-5 top-1/2 -translate-y-1/2 text-lg text-primary;
  content: '#';
}

pre {
  position: relative;
}

.nav-bg {
  background: rgba(18, 24, 27, 0.9);
  backdrop-filter: blur(0.25rem);

  @media (min-width: 768px) and (max-width: 1024px) {
    background: none;
    backdrop-filter: none;
  }
}

.navbar {
  transition: width 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

.navbar .link-text {
  display: none;
}

.nav-toggle svg {
  transform: rotate(0);
  transition: transform 200ms ease;
  transition-delay: 100ms;
}

@media (hover: hover) {
  .navbar:hover .nav-toggle svg {
    transform: rotate(-180deg);
  }

  @media (min-width: 768px) {
    .navbar:hover .link-text {
      display: block;
    }

    .navbar:hover {
      width: 16rem;
      box-shadow: 5px 0px 20px 0px rgba(18, 24, 27, 0.9);
      background: rgb(18, 24, 27);
      backdrop-filter: blur(0.25rem);
    }
  }
}

.mdx.prose a {
  @apply italic text-primary underline underline-offset-2;
}

.shapes {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border-radius: 60px;
  background: linear-gradient(
    60deg,
    var(--blue) 0%,
    #d6cbf6 30%,
    var(--pink) 70%
  );
}

.blush {
  position: absolute;
  right: -10px;
  bottom: -5px;
  width: 100%;
  height: 20px;
  filter: blur(20px);
}

.blush.pink {
  background: hsl(var(--color-primaryBackgroundDark));
}

.blush.blue {
  background: hsl(var(--color-secondaryDark));
}

.shapes .container {
  position: absolute;
  top: -100px;
  bottom: -100px;
  left: -100px;
  right: -100px;
  width: calc(100% + 200px);
  pointer-events: none;
}

.shapes canvas {
  position: absolute;
  width: 100%;
  height: 100%;
}

.label {
  width: 180px;
  padding: 20px 0;
  transform: translateZ(0);
  font-weight: 700;
  z-index: 1;
}

.default {
  display: block;
}

.number {
  padding: 20px 0;
  width: 88px;
  position: relative;
  transform: translateZ(0);
}

.number:before {
  content: '';
  position: absolute;
  left: 0;
  top: 1px;
  bottom: 1px;
  width: 1px;
  background-color: #35373f;
}

.current {
  color: #8a8d9b;
  opacity: 1;
  display: block;
}

.new {
  color: #fbfaaa;
  position: absolute;
  top: 20px;
  left: 0;
  right: 0;
  display: block;
}

.add {
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
  opacity: 0;
  transform: translateY(38px);
  pointer-events: none;
  color: #d0d0db;
  display: block;
}

.search .input {
}
